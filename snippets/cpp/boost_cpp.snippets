##
## Misc
snippet static_assert C++03
	BOOST_STATIC_ASSERT_MSG( ${1:bool_constexpr}, ${2:message} );
##
## Keywords
snippet lc boost
	boost::lexical_cast<${1:T}>( ${2:value} )
##
## Iterator Range
snippet iterator_range boost
	boost::iterator_range<${1:IT}>
snippet mkiterator_range boost
	boost::make_iterator_range( ${1:begin}, ${2:end} )
##
## IPC
snippet shared_memory_object boost::interprocess
	boost::interprocess::shared_memory_object
snippet open_or_create boost::interprocess
	boost::interprocess::open_or_create
snippet create_only boost::interprocess
	boost::interprocess::create_only
snippet open_only boost::interprocess
	boost::interprocess::open_only
snippet open_read_only boost::interprocess
	boost::interprocess::open_read_only
snippet open_copy_on_write boost::interprocess
	boost::interprocess::open_copy_on_write
snippet read_write boost::interprocess
	boost::interprocess::read_write
snippet read_only boost::interprocess
	boost::interprocess::read_only
snippet interprocess_exception boost::interprocess
	boost::interprocess::interprocess_exception
snippet mapped_region boost::interprocess
	boost::interprocess::mapped_region
snippet file_mapping boost::interprocess
	boost::interprocess::file_mapping
snippet remove_shared_memory_on_destroy boost::interprocess
	boost::interprocess::remove_shared_memory_on_destroy
snippet windows_shared_memory boost::interprocess
	boost::interprocess::windows_shared_memory
snippet offset_t boost::interprocess
	boost::interprocess::offset_t
snippet managed_shared_memory boost::interprocess
	boost::interprocess::managed_shared_memory
snippet remove boost::interprocess::shared_memory_object
	boost::interprocess::shared_memory_object::remove( ${1:string} )
snippet bad_alloc boost::interprocess
	boost::interprocess::bad_alloc
snippet segment_manager boost::interprocess::managed_shared_memory
	boost::interprocess::managed_shared_memory::segment_manager
snippet allocator boost::interprocess
	boost::interprocess::allocator<${1:T}, ${2:segment_manager}>
snippet basic_string boost::interprocess
	boost::interprocess::basic_string<${1:T}>
snippet vector boost::interprocess
	boost::interprocess::vector<${1:T}>
snippet map boost::interprocess
	boost::interprocess::map<${1:KT}, ${2:VT}>
snippet named_mutex boost::interprocess
	boost::interprocess::named_mutex
snippet remove boost::interprocess::named_mutex
	boost::interprocess::named_mutex::remove( ${1:string} )
snippet named_recursive_mutex boost::interprocess
	boost::interprocess::named_recursive_mutex
snippet interprocess_recursive_mutex boost::interprocess
	boost::interprocess::interprocess_recursive_mutex
snippet named_condition boost::interprocess
	boost::interprocess::named_condition
snippet remove boost::interprocess::named_condition
	boost::interprocess::named_condition::remove( ${1:string} )
snippet scoped_lock boost::interprocess
	boost::interprocess::scoped_lock<${1:mutex_type}>
##
## Logging Macros
snippet LOG boost
	BOOST_LOG( ${1:logger} ) << "${2:message}";
snippet LOG_TRIVIAL boost
	BOOST_LOG_TRIVIAL( ${1:debug} ) << "${2:message}";
snippet LOG_SEV boost
	BOOST_LOG_SEV( ${1:severity_logger}, ${2:severity} ) << "${3:message}";
snippet LOG_CHANNEL boost
	BOOST_LOG_CHANNEL( ${1:channel_logger}, "${2:channel}" ) << "${3:message}";
snippet LOG_CHANNEL_SEV boost
	BOOST_LOG_CHANNEL_SEV( ${1:severity_channel_logger}, "${2:channel}", ${3:severity} ) << "${3:message}";
##
## Logging Core
snippet get boost::log::core
	boost::log::core::get()
##
## Logging Helpers
snippet add_console_log boost::log
	boost::log::add_console_log( ${1:ostream}, ${2:args} )
##
## Logging Sinks
snippet asynchronous_sink boost::log::sinks
	boost::log::sinks::asynchronous_sink<${1:sink_backend}>
snippet synchronous_sink boost::log::sinks
	boost::log::sinks::synchronous_sink<${1:sink_backend}>
snippet wtext_ostream_backend boost::log::sinks
	boost::log::sinks::wtext_ostream_backend
snippet text_ostream_backend boost::log::sinks
	boost::log::sinks::text_ostream_backend
snippet text_multifile_backend boost::log::sinks
	boost::log::sinks::text_multifile_backend
snippet text_file_backend boost::log::sinks
	boost::log::sinks::text_file_backend
snippet syslog_backend boost::log::sinks
	boost::log::sinks::syslog_backend
snippet rotation_at_time_interval boost::log::sinks::file
	boost::log::sinks::file::rotation_at_time_interval( ${1:time_duration} )
snippet rotation_at_time_point boost::log::sinks::file
	boost::log::sinks::file::rotation_at_time_point( ${1:hour}, ${2:minute}, ${3:second} )
snippet threading_model_tag boost::log::sinks
	boost::log::sinks::threading_model_tag
snippet single_thread_tag boost::log::sinks
	boost::log::sinks::single_thread_tag
snippet backend_synchronization_tag boost::log::sinks
	boost::log::sinks::backend_synchronization_tag
snippet frontend_synchronization_tag boost::log::sinks
	boost::log::sinks::frontend_synchronization_tag
snippet basic_sink_backend boost::log::sinks
	boost::log::sinks::basic_sink_backend<${2:requirements}>
snippet combine_requirements boost::log::sinks
	boost::log::sinks::combine_requirements<${1:reqs...}>::type
snippet flushing boost::log::sinks
	boost::log::sinks::flushing
snippet formatted_records boost::log::sinks
	boost::log::sinks::formatted_records
snippet concurrent_feeding boost::log::sinks
	boost::log::sinks::concurrent_feeding
snippet synchronized_feeding boost::log::sinks
	boost::log::sinks::synchronized_feeding
snippet consume boost::log::sinks
	void consume( boost::log::record_view const& rec );
snippet value_ref boost::log
	boost::log::value_ref<${1:T}>
snippet visit boost::log
	boost::log::visit<${1:T}>( ${2:attr}, ${3:visitor} )
snippet visitation_result boost::log
	boost::log::visitation_result
snippet extract boost::log::attr
	boost::log::extract<${1:T}>( ${2:attr} )
snippet extract boost::log::rec
	boost::log::extract<${1:T}>( ${2:attr}, ${3:rec} )
snippet filter boost::log
	boost::log::filter
##
## Logging Keywords
snippet file_name boost::log::keywords
	boost::log::keywords::file_name
snippet rotation_size boost::log::keywords
	boost::log::keywords::rotation_size
snippet time_based_rotation boost::log::keywords
	boost::log::keywords::time_based_rotation
snippet format boost::log::keywords
	boost::log::keywords::format
snippet severity boost::log::keywords
	boost::log::keywords::severity
snippet channel boost::log::keywords
	boost::log::keywords::channel
##
## Logging Sources
snippet logger boost::log::sources
	boost::log::sources::logger
snippet logger_mt boost::log::sources
	boost::log::sources::logger_mt
snippet wlogger boost::log::sources
	boost::log::sources::wlogger
snippet wlogger_mt boost::log::sources
	boost::log::sources::wlogger_mt
snippet severity_logger boost::log::sources
	boost::log::sources::severity_logger<${1:enum_type}>
snippet severity_logger_mt boost::log::sources
	boost::log::sources::severity_logger_mt<${1:enum_type}>
snippet wseverity_logger boost::log::sources
	boost::log::sources::wseverity_logger<${1:enum_type}>
snippet wseverity_logger_mt boost::log::sources
	boost::log::sources::wseverity_logger_mt<${1:enum_type}>
snippet severity_channel_logger boost::log::sources
	boost::log::sources::severity_channel_logger<${1:enum_type}, ${2:channel_type}>
snippet severity_channel_logger_mt boost::log::sources
	boost::log::sources::severity_channel_logger_mt<${1:enum_type}, ${2:channel_type}>
snippet wseverity_channel_logger boost::log::sources
	boost::log::sources::wseverity_channel_logger<${1:enum_type}, ${2:channel_type}>
snippet wseverity_channel_logger_mt boost::log::sources
	boost::log::sources::wseverity_channel_logger_mt<${1:enum_type}, ${2:channel_type}>
##
## Logging Functions
snippet add_value boost::log
	boost::log::add_value( "${1:attr_name}", "${2:value}" )
##
## Logging Attributes
snippet add_common_attr boost::log
	boost::log::add_common_attributes();
snippet attr_value boost::log
	boost::log::attribute_value
snippet attr_value_set boost::log
	boost::log::attribute_value_set
snippet attr_name boost::log
	boost::log::attribute_name
snippet record_view boost::log
	boost::log::record_view
snippet formatting_ostream boost::log
	boost::log::formatting_ostream
snippet current_scope_info boost::log::attributes
	boost::log::attributes::current_scope_info
snippet constant boost::log::attributes
	boost::log::attributes::constant<${1:T}>( ${2:val} )
snippet mutable_constant boost::log::attributes
	boost::log::attributes::mutable_constant<${1:T}>( ${2:initial_value} )
snippet counter boost::log::attributes
	boost::log::attributes::counter<${1:T}>( ${2:initial_value = 0}, ${3:step = 1} )
snippet timer boost::log::attributes
	boost::log::attributes::timer()
snippet local_clock boost::log::attributes
	boost::log::attributes::local_clock()
snippet current_process_name boost::log::attributes
	boost::log::attributes::current_process_name()
snippet named_scope boost::log::attributes
	boost::log::attributes::named_scope()
snippet current_scope boost::log::attributes
	boost::log::attributes::current_scope()
snippet make_function boost::log::attributes
	boost::log::attributes::make_function( ${1:function} )
snippet current_thread_id boost::log::attributes
	boost::log::attributes::current_thread_id()
snippet ATTR_KEYWORD boost::log::attributes
	BOOST_LOG_ATTRIBUTE_KEYWORD( ${1:keyword}, "${2:attr_name}", ${3:T} )
snippet SCOPED_LOGGER_TAG boost::log::attributes
	BOOST_LOG_SCOPED_LOGGER_TAG( ${1:logger}, "${2:tag_name}", ${3:tag_value} );
snippet SCOPED_THREAD_TAG boost::log::attributes
	BOOST_LOG_SCOPED_THREAD_TAG( "${1:tag_name}", ${2:tag_value} );
snippet SCOPED_LOGGER_ATTR boost::log::attributes
	BOOST_LOG_SCOPED_LOGGER_ATTR( ${1:logger}, "${2:attr_name}", ${3:attr} );
snippet SCOPED_THREAD_ATTR boost::log::attributes
	BOOST_LOG_SCOPED_THREAD_ATTR( "${1:attr_name}", ${2:attr} );
snippet NAMED_SCOPE boost::log::attributes
	BOOST_LOG_NAMED_SCOPE( "${1:value}" );
snippet LOG_FXN boost::log::attributes
	BOOST_LOG_FUNCTION();
##
## Logging expressions
snippet wmessage boost::log::expressions
	boost::log::expressions::wmessage
snippet message boost::log::expressions
	boost::log::expressions::message
snippet smessage boost::log::expressions
	boost::log::expressions::smessage
##
## Logging Exceptions
snippet runtime_error boost::log
	boost::log::runtime_error
snippet missing_value boost::log
	boost::log::missing_value
snippet invalid_type boost::log
	boost::log::invalid_type
snippet invalid_value boost::log
	boost::log::invalid_value
snippet parse_error boost::log
	boost::log::parse_error
snippet conversion_error boost::log
	boost::log::conversion_error
snippet system_error boost::log
	boost::log::system_error
snippet logic_error boost::log
	boost::log::logic_error
snippet odr_violation boost::log
	boost::log::odr_violation
snippet unexpected_call boost::log
	boost::log::unexpected_call
snippet setup_error boost::log
	boost::log::setup_error
snippet limitation_error boost::log
	boost::log::limitation_error
##
## CRC
snippet crc_basic boost
	boost::crc_basic<${1:n_bits}>
snippet crc_optimal boost
	boost::crc_optimal<${1:n_bits}>
snippet crc boost
	boost::crc<${1:n_bits}, ${2:0u}, ${3:0u}, ${4:0u}, ${5:false}, ${6:false}>( ${7:p}, ${8:n} )
snippet augmented_crc boost
	boost::augmented_crc<${1:n_bits}, ${2:0u}>( ${3:p}, ${4:n}, ${5:initial_remainder} )
snippet crc_16_type boost
	boost::crc_16_type
snippet crc_16_type boost
	boost::crc_ccitt_type
snippet crc_16_type boost
	boost::crc_xmodem_type
snippet crc_16_type boost
	boost::crc_32_type
##
## IO Streams
snippet aggregate_filter boost::iostreams
	boost::iostreams::aggregate_filter
snippet array boost::iostreams
	boost::iostreams::array
snippet array_sink boost::iostreams
	boost::iostreams::array_sink
snippet array_source boost::iostreams
	boost::iostreams::array_source
snippet back_insert_device boost::iostreams
	boost::iostreams::back_insert_device
snippet basic_array boost::iostreams
	boost::iostreams::basic_array
snippet basic_array_sink boost::iostreams
	boost::iostreams::basic_array_sink
snippet basic_array_source boost::iostreams
	boost::iostreams::basic_array_source
snippet basic_bzip2_compressor boost::iostreams
	boost::iostreams::basic_bzip2_compressor
snippet basic_bzip2_decompressor boost::iostreams
	boost::iostreams::basic_bzip2_decompressor
snippet basic_counter boost::iostreams
	boost::iostreams::basic_counter
snippet basic_file boost::iostreams
	boost::iostreams::basic_file
snippet basic_file_sink boost::iostreams
	boost::iostreams::basic_file_sink
snippet basic_file_source boost::iostreams
	boost::iostreams::basic_file_source
snippet basic_gzip_compressor boost::iostreams
	boost::iostreams::basic_gzip_compressor
snippet basic_gzip_decompressor boost::iostreams
	boost::iostreams::basic_gzip_decompressor
snippet basic_line_filter boost::iostreams
	boost::iostreams::basic_line_filter
snippet basic_null_device boost::iostreams
	boost::iostreams::basic_null_device
snippet basic_null_sink boost::iostreams
	boost::iostreams::basic_null_sink
snippet basic_null_source boost::iostreams
	boost::iostreams::basic_null_source
snippet basic_regex_filter boost::iostreams
	boost::iostreams::basic_regex_filter
snippet basic_stdio_filter boost::iostreams
	boost::iostreams::basic_stdio_filter
snippet basic_zlib_compressor boost::iostreams
	boost::iostreams::basic_zlib_compressor
snippet basic_zlib_decompressor boost::iostreams
	boost::iostreams::basic_zlib_decompressor
snippet bzip2_compressor boost::iostreams
	boost::iostreams::bzip2_compressor
snippet bzip2_decompressor boost::iostreams
	boost::iostreams::bzip2_decompressor
snippet bzip2_error boost::iostreams
	boost::iostreams::bzip2_error
snippet bzip2_params boost::iostreams
	boost::iostreams::bzip2_params
snippet category_of boost::iostreams
	boost::iostreams::category_of
snippet chain boost::iostreams
	boost::iostreams::chain
snippet char_traits boost::iostreams
	boost::iostreams::char_traits
snippet char_type_of boost::iostreams
	boost::iostreams::char_type_of
snippet code_converter boost::iostreams
	boost::iostreams::code_converter
snippet combination boost::iostreams
	boost::iostreams::combination
snippet composite boost::iostreams
	boost::iostreams::composite<${1:filter}, ${2:filter_or_device}>
snippet counter boost::iostreams
	boost::iostreams::counter
snippet device boost::iostreams
	boost::iostreams::device
snippet dual_use_filter boost::iostreams
	boost::iostreams::dual_use_filter
snippet dual_use_wfilter boost::iostreams
	boost::iostreams::dual_use_wfilter
snippet file boost::iostreams
	boost::iostreams::file
snippet file_descriptor boost::iostreams
	boost::iostreams::file_descriptor
snippet file_descriptor_sink boost::iostreams
	boost::iostreams::file_descriptor_sink
snippet file_descriptor_source boost::iostreams
	boost::iostreams::file_descriptor_source
snippet file_sink boost::iostreams
	boost::iostreams::file_sink
snippet file_source boost::iostreams
	boost::iostreams::file_source
snippet filter boost::iostreams
	boost::iostreams::filter
snippet filtering_stream boost::iostreams
	boost::iostreams::filtering_stream
snippet filtering_streambuf boost::iostreams
	boost::iostreams::filtering_streambuf
snippet gzip_compressor boost::iostreams
	boost::iostreams::gzip_compressor
snippet gzip_decompressor boost::iostreams
	boost::iostreams::gzip_decompressor
snippet gzip_error boost::iostreams
	boost::iostreams::gzip_error
snippet gzip_params boost::iostreams
	boost::iostreams::gzip_params
snippet input_filter boost::iostreams
	boost::iostreams::input_filter
snippet input_wfilter boost::iostreams
	boost::iostreams::input_wfilter
snippet inverse boost::iostreams
	boost::iostreams::inverse<${1:filter_type}>
snippet line_filter boost::iostreams
	boost::iostreams::line_filter
snippet mapped_file boost::iostreams
	boost::iostreams::mapped_file
snippet mapped_file_sink boost::iostreams
	boost::iostreams::mapped_file_sink
snippet mapped_file_source boost::iostreams
	boost::iostreams::mapped_file_source
snippet mode_of boost::iostreams
	boost::iostreams::mode_of
snippet multichar_dual_use_filter boost::iostreams
	boost::iostreams::multichar_dual_use_filter
snippet multichar_dual_use_wfilter boost::iostreams
	boost::iostreams::multichar_dual_use_wfilter
snippet multichar_filter boost::iostreams
	boost::iostreams::multichar_filter
snippet multichar_input_filter boost::iostreams
	boost::iostreams::multichar_input_filter
snippet multichar_input_wfilter boost::iostreams
	boost::iostreams::multichar_input_wfilter
snippet multichar_output_filter boost::iostreams
	boost::iostreams::multichar_output_filter
snippet multichar_output_wfilter boost::iostreams
	boost::iostreams::multichar_output_wfilter
snippet multichar_wfilter boost::iostreams
	boost::iostreams::multichar_wfilter
snippet newline_filter boost::iostreams
	boost::iostreams::newline_filter
snippet null_sink boost::iostreams
	boost::iostreams::null_sink
snippet null_source boost::iostreams
	boost::iostreams::null_source
snippet output_filter boost::iostreams
	boost::iostreams::output_filter
snippet output_wfilter boost::iostreams
	boost::iostreams::output_wfilter
snippet regex_filter boost::iostreams
	boost::iostreams::regex_filter
snippet restriction boost::iostreams
	boost::iostreams::restriction<${1:filter_or_device_type}>
snippet seekable_filter boost::iostreams
	boost::iostreams::seekable_filter
snippet seekable_wfilter boost::iostreams
	boost::iostreams::seekable_wfilter
snippet sink boost::iostreams
	boost::iostreams::sink
snippet source boost::iostreams
	boost::iostreams::source
snippet stdio_filter boost::iostreams
	boost::iostreams::stdio_filter
snippet stream boost::iostreams
	boost::iostreams::stream
snippet stream_buffer boost::iostreams
	boost::iostreams::stream_buffer
snippet symmetric_filter boost::iostreams
	boost::iostreams::symmetric_filter
snippet tee_device boost::iostreams
	boost::iostreams::tee_device
snippet tee_filter boost::iostreams
	boost::iostreams::tee_filter
snippet warray boost::iostreams
	boost::iostreams::warray
snippet warray_sink boost::iostreams
	boost::iostreams::warray_sink
snippet warray_source boost::iostreams
	boost::iostreams::warray_source
snippet wchain boost::iostreams
	boost::iostreams::wchain
snippet wcounter boost::iostreams
	boost::iostreams::wcounter
snippet wdevice boost::iostreams
	boost::iostreams::wdevice
snippet wfile boost::iostreams
	boost::iostreams::wfile
snippet wfile_sink boost::iostreams
	boost::iostreams::wfile_sink
snippet wfile_source boost::iostreams
	boost::iostreams::wfile_source
snippet wfilter boost::iostreams
	boost::iostreams::wfilter
snippet wline_filter boost::iostreams
	boost::iostreams::wline_filter
snippet wnull_sink boost::iostreams
	boost::iostreams::wnull_sink
snippet wnull_source boost::iostreams
	boost::iostreams::wnull_source
snippet wregex_filter boost::iostreams
	boost::iostreams::wregex_filter
snippet wsink boost::iostreams
	boost::iostreams::wsink
snippet wsource boost::iostreams
	boost::iostreams::wsource
snippet wstdio_filter boost::iostreams
	boost::iostreams::wstdio_filter
snippet zlib_compressor boost::iostreams
	boost::iostreams::zlib_compressor
snippet zlib_decompressor boost::iostreams
	boost::iostreams::zlib_decompressor
snippet zlib_error boost::iostreams
	boost::iostreams::zlib_error
snippet zlib_params boost::iostreams
	boost::iostreams::zlib_params
##
## Boost IO Functions
snippet back_inserter boost::iostreams
	boost::iostreams::back_inserter( ${1:container} )
snippet close boost::iostreams
	boost::iostreams::close( ${1:device} )
snippet combine boost::iostreams
	boost::iostreams::combine( ${1:input}, ${2:output} )
snippet compose boost::iostreams
	boost::iostreams::compose( ${1:filter}, ${2:filter_or_device} )
snippet copy boost::iostreams
	boost::iostreams::copy( ${1:source}, ${2:sink} )
snippet flush boost::iostreams
	boost::iostreams::flush( ${1:T}, ${2:sink} )
snippet get boost::iostreams
	boost::iostreams::get( ${1:source} )
snippet imbue boost::iostreams
	boost::iostreams::imbue( ${1:T}, ${2:locale} )
snippet invert boost::iostreams
	boost::iostreams::invert( ${1:filter} )
snippet offset_to_position boost::iostreams
	boost::iostreams::offset_to_position( ${1:stream_offset} )
snippet optimal_buffer_size boost::iostreams
	boost::iostreams::optimal_buffer_size( ${2:filter_or_device} )
snippet position_to_offset boost::iostreams
	boost::iostreams::position_to_offset( ${1:streampos} )
snippet put boost::iostreams
	boost::iostreams::put( ${1:sink}, ${2:char} )
snippet putback boost::iostreams
	boost::iostreams::putback( ${1:peekable}, ${2:char} )
snippet read boost::iostreams
	boost::iostreams::read( ${1:source}, ${2:char_ptr}, ${3:n} )
snippet restrict boost::iostreams
	boost::iostreams::restrict( ${1:filter_or_device}, ${2:stream_offset}, ${3:len = -1} )
snippet seek boost::iostreams
	boost::iostreams::seek( ${1:t}, ${2:n}, ${3:way}, ${4:which} )
snippet tee boost::iostreams
	boost::iostreams::tee( ${1:sink1}, ${2:sink2} )
snippet test_filter_pair boost::iostreams
	boost::iostreams::test_filter_pair( ${1:output_filter}, ${2:input_filter}, ${3:data} )
snippet test_input_filter boost::iostreams
	boost::iostreams::test_input_filter( ${1:input_filter}, ${2:input}, ${3:output} )
snippet test_output_filter boost::iostreams
	boost::iostreams::test_output_filter( ${1:output_filter}, ${2:input}, ${3:output} )
snippet write boost::iostreams
	boost::iostreams::write( ${1:sink}, ${2:char_ptr}, ${3:n} )
##
## Boost IO Macros
snippet BOOST_IOSTREAMS_PIPABLE
	BOOST_IOSTREAMS_PIPABLE( ${1:filter}, ${2:arity} )
##
## Test
##
## MPL
##
## Python
##
## Format
snippet format boost
	boost::format("${1:%1 %2}") % ${2:val % val}
snippet group boost::io
	boost::io::group( ${1:manipulators...}, ${2:val} )
##
## Tokenizer
snippet offset_separator boost
	boost::offset_separator
snippet escaped_list_separator boost
	boost::escaped_list_separator<${1:char}>
snippet char_separator boost
	boost::char_separator<${1:char}>
snippet tokenizer boost
	boost::tokenizer<${1:separator_type}>
snippet tok_iterator boost::tokenizer
	boost::tokenizer::iterator
##
## Any
snippet any boost
	boost::any ${1:a} = ${2:val};
snippet acast boost
	boost::any_cast<${1:T}>( ${2:any} )
snippet bad_any_cast boost
	boost::bad_any_cast
##
## Variant
snippet variant boost
	boost::variant<${1:type_list}>
snippet get boost
	boost::get<${1:T}>( ${2:variant} )
snippet static_visitor boost
	boost::static_visitor<>
snippet apply_visitor boost
	boost::apply_visitor( ${1:static_visitor}, ${2:variant} )
##
## Optional
snippet none boost
	boost::none
snippet optional boost
	boost::optional<${1:T}>
##
## Serialization
snippet polymorphic_oarchive boost::archive
	boost::archive::polymorphic_oarchive
snippet polymorphic_iarchive boost::archive
	boost::archive::polymorphic_iarchive
snippet polymorphic_text_oarchive boost::archive
	boost::archive::polymorphic_text_oarchive
snippet polymorphic_text_iarchive boost::archive
	boost::archive::polymorphic_text_iarchive
snippet polymorphic_binary_oarchive boost::archive
	boost::archive::polymorphic_binary_oarchive
snippet polymorphic_binary_iarchive boost::archive
	boost::archive::polymorphic_binary_iarchive
snippet polymorphic_xml_oarchive boost::archive
	boost::archive::polymorphic_xml_oarchive
snippet polymorphic_xml_iarchive boost::archive
	boost::archive::polymorphic_xml_iarchive
snippet polymorphic_text_woarchive boost::archive
	boost::archive::polymorphic_text_woarchive
snippet polymorphic_text_wiarchive boost::archive
	boost::archive::polymorphic_text_wiarchive
snippet polymorphic_binary_woarchive boost::archive
	boost::archive::polymorphic_binary_woarchive
snippet polymorphic_binary_wiarchive boost::archive
	boost::archive::polymorphic_binary_wiarchive
snippet polymorphic_xml_woarchive boost::archive
	boost::archive::polymorphic_xml_woarchive
snippet polymorphic_xml_wiarchive boost::archive
	boost::archive::polymorphic_xml_wiarchive
snippet text_oarchive boost::archive
	boost::archive::text_oarchive
snippet text_oarchive boost::archive
	boost::archive::text_oarchive
snippet text_iarchive boost::archive
	boost::archive::text_iarchive
snippet xml_oarchive boost::archive
	boost::archive::xml_oarchive
snippet xml_iarchive boost::archive
	boost::archive::xml_iarchive
snippet text_woarchive boost::archive
	boost::archive::text_woarchive
snippet text_wiarchive boost::archive
	boost::archive::text_wiarchive
snippet xml_woarchive boost::archive
	boost::archive::xml_woarchive
snippet xml_wiarchive boost::archive
	boost::archive::xml_wiarchive
snippet binary_oarchive boost::archive
	boost::archive::binary_oarchive
snippet binary_iarchive boost::archive
	boost::archive::binary_iarchive
snippet SPLIT_MEMBER boost::serialization
	BOOST_SERIALIZATION_SPLIT_MEMBER()
snippet CLASS_VERSION boost::serialization
	BOOST_CLASS_VERSION( ${1:class}, ${2:version_int} )
snippet access boost::serialization
	friend class boost::serialization::access;
snippet base_object boost::serialization
	boost::serialization::base_object<${1:T}>( ${2:*this} )
snippet mkarray boost::serialization
	boost::serialization::make_array( ${1:ptr}, ${1:size} )
snippet mkbinary_object boost::serialization
	boost::serialization::make_binary_object( ${1:ptr}, ${1:size} )
snippet load boost::serialization
	template<class Archive>
	void load( Archive & ar, const unsigned int version )
	{
		ar & ${1:member};
	}
snippet save boost::serialization
	template<class Archive>
	void save( Archive & ar, const unsigned int version )
	{
		ar & ${1:member};
	}
snippet serialize boost::serialization
	template<class Archive>
	void serialize( Archive & ar, const unsigned int version )
	{
		ar & ${1:member};
	}
snippet serialize_ext boost::serialization
	namespace boost {
	namespace serialization {
	template<class Archive>
	void serialize( Archive & ar, ${1:`vim_snippets#Filename('$1', 'ClassName')`}& ${2:val}, const unsigned int version )
	{
		ar & ${2}.${3:member};
	}
	}
	}
##
## Program options
snippet po_example boost::program_options
	// Declare the supported options.
	boost::program_options::options_description desc( "Allowed options" );
	desc.add_options()
		( "help", "produce help message" )
	;

	boost::program_options::variables_map vm;
	boost::program_options::store( boost::program_options::parse_command_line( ac, av, desc ), vm );
	boost::program_options::notify( vm );

	if ( vm.count( "help" ) ) {
		cout << desc << "\n";
		return 1;
	}
snippet options_description boost::program_options
	boost::program_options::options_description
snippet positional_options_description boost::program_options
	boost::program_options::positional_options_description
snippet variables_map boost::program_options
	boost::program_options::variables_map
snippet basic_parsed_options boost::program_options
	boost::program_options::basic_parsed_options<${1:charT}>
snippet basic_option boost::program_options
	boost::program_options::basic_option<${1:charT}>
snippet value boost::program_options
	boost::program_options::value<${1:T}>
snippet store boost::program_options
	boost::program_options::store( ${1:parse_command}, ${2:variables_map} )
snippet notify boost::program_options
	boost::program_options::notify( ${1:variables_map} )
snippet parse_command_line boost::program_options
	boost::program_options::parse_command_line( ${1:argc}, ${2:argv}, ${3:options_description} )
snippet basic_command_line_parser boost::program_options
	boost::program_options::basic_command_line_parser( ${1:argc}, ${2:argv} )
snippet parse_config_file boost::program_options
	boost::program_options::parse_config_file( ${1:path}, ${2:options_description} )
snippet parse_environment boost::program_options
	boost::program_options::parse_environment( ${1:options_description}, ${2:string_prefix} )
snippet collect_unrecognized boost::program_options
	boost::program_options::collect_unrecognized( ${1:options_description}, ${2:mode} )
##
## Errors
snippet error_code boost::system
	boost::system::error_code
snippet system_error boost::system
	boost::system::system_error
snippet error_condition boost::system
	boost::system::error_condition
snippet exception boost
	boost::exception
snippet diagnostic_information boost
	boost::diagnostic_information( ${1:e} )
snippet get_error_info boost
	boost::get_error_info<${1:T}>( ${2:e} )
##
## Time
snippet date boost::gregorian
	boost::gregorian::date
snippet ptime boost::posix_time
	boost::posix_time::ptime
snippet time_duration boost::posix_time
	boost::posix_time::time_duration
snippet time_period boost::posix_time
	boost::posix_time::time_period
snippet time_iterator boost::posix_time
	boost::posix_time::time_iterator
snippet hours boost::posix_time
	boost::posix_time::hours( ${1:count} )
snippet minutes boost::posix_time
	boost::posix_time::minutes( ${1:count} )
snippet seconds boost::posix_time
	boost::posix_time::seconds( ${1:count} )
snippet milliseconds boost::posix_time
	boost::posix_time::milliseconds( ${1:count} )
snippet microseconds boost::posix_time
	boost::posix_time::microseconds( ${1:count} )
snippet nanoseconds boost::posix_time
	boost::posix_time::nanoseconds( ${1:count} )
snippet time_from_string boost::posix_time
	boost::posix_time::time_from_string( ${1:string} )
snippet from_iso_string boost::posix_time
	boost::posix_time::from_iso_string( ${1:string} )
snippet universal_time boost::posix_time
	boost::posix_time::${1:microsec_clock}::universal_time()
snippet local_time boost::posix_time
	boost::posix_time::${1:microsec_clock}::local_time()
snippet from_time_t boost::posix_time
	boost::posix_time::from_time_t( ${1:time_t} )
snippet from_ftime boost::posix_time
	boost::posix_time::from_ftime<ptime>( ${1:FILETIME} )
##
## Threading
snippet thread_joiner boost
	boost::thread_joiner
snippet scoped_thread boost
	boost::scoped_thread<>
snippet thread_group boost
	boost::thread_group
snippet strict_scoped_thread boost
	boost::strict_scoped_thread<>
snippet physical_concurrency boost::thread
	boost::thread::physical_concurrency()
snippet thread_specific_ptr boost::thread
	boost::thread::thread_specific_ptr
snippet condition_variable_any boost
	boost::condition_variable_any
snippet notify_all_at_thread_exit boost
	boost::notify_all_at_thread_exit( ${1:condition_variable}, ${2:mutex} )
snippet barrier boost
	boost::barrier
snippet latch boost
	boost::latch
snippet rmutex boost
	boost::recursive_mutex
snippet tmutex boost
	boost::timed_mutex
snippet rtmutex boost
	boost::recursive_timed_mutex
snippet smutex boost
	boost::shared_mutex
snippet umutex boost
	boost::upgrade_mutex
snippet nmutex boost
	boost::null_mutex
snippet mkunique_locks boost
	boost::make_unique_locks( ${1:mutex...} )
snippet mkunique_lock boost
	boost::make_unique_lock( ${1:mutex} )
snippet nested_strict_lock boost
	boost::nested_strict_lock<${1:mutex}>
snippet mknested_strict_lock boost
	boost::make_nested_strict_lock( ${1:lock} )
snippet strict_lock boost
	boost::strict_lock<${1:mutex}>
snippet mkstrict_lock boost
	boost::make_strict_lock( ${1:lock} )
snippet externally_locked boost
	boost::externally_locked
snippet const_strict_lock_ptr boost
	boost::const_strict_lock_ptr
snippet upgrade_lock boost
	boost::upgrade_lock<${1:mutex}>
snippet upgrade_to_unique_lock boost
	boost::upgrade_to_unique_lock<${1:mutex}>
snippet reverse_lock boost
	boost::reverse_lock<${1:lock}>
snippet mklock_guard boost
	boost::make_lock_guard( ${1:lockable_mutex} )
snippet mkready_future boost
	boost::make_ready_future<${1:R}>( ${2:val} )
snippet decay_copy boost
	boost::decay_copy( ${1:t} )
snippet wait_for_any boost
	boost::wait_for_any( ${1:futures...} )
snippet wait_for_all boost
	boost::wait_for_all( ${1:futures...} )
snippet when_all boost
	boost::when_all( ${1:futures} )
snippet when_any boost
	boost::when_any( ${1:futures} )
##
## Mutexes
snippet mutex boost::upgrade_mutex
	boost::upgrade_mutex
snippet mutex boost::null_mutex
	boost::null_mutex
snippet mutex boost::interprocess::named_mutex
	boost::interprocess::named_mutex
snippet mutex boost::interprocess::named_recursive_mutex
	boost::interprocess::named_recursive_mutex
snippet mutex boost::interprocess::interprocess_recursive_mutex
	boost::interprocess::interprocess_recursive_mutex
##
## ASIO
snippet io_service boost::asio
	boost::asio::io_service
snippet system_timer boost::asio
	boost::asio::system_timer
snippet steady_timer boost::asio
	boost::asio::steady_timer
snippet high_resolution_timer boost::asio
	boost::asio::high_resolution_timer
snippet deadline_timer boost::asio
	boost::asio::deadline_timer
snippet strand boost::asio::io_service
	boost::asio::io_service::strand
snippet work boost::asio::io_service
	boost::asio::io_service::work
snippet signal_set boost::asio::signal_set
	boost::asio::signal_set
##
## ASIO Timers
snippet timer boost::asio::system_timer
	boost::asio::system_timer
snippet timer boost::asio::steady_timer
	boost::asio::steady_timer
snippet timer boost::asio::high_resolution_timer
	boost::asio::high_resolution_timer
snippet timer boost::asio::deadline_timer
	boost::asio::deadline_timer
##
## Networking
snippet socket boost::asio
	boost::asio::ip::${1:tcp}::socket
snippet resolver boost::asio
	boost::asio::ip::${1:tcp}::resolver
snippet query boost::asio
	boost::asio::ip::${1:tcp}::resolver::quer
snippet endpoint boost::asio
	boost::asio::ip::${1:tcp}::endpoint
snippet buffer boost::asio
	boost::asio::buffer( ${1:buffer_bytes} )
snippet mutable_buffer boost::asio
	boost::asio::mutable_buffer
snippet async_read_until boost::asio
	boost::asio::async_read_until( ${1:stream}, ${2:streambuf}, ${3:condition}, ${4:handler} )
snippet streambuf boost::asio
	boost::asio::streambuf
snippet address boost::asio
	boost::asio::ip::address
snippet address_v4 boost::asio
	boost::asio::ip::address_v4
snippet address_v6 boost::asio
	boost::asio::ip::address_v6
snippet host_name boost::asio
	boost::asio::ip::host_name( ${1:ec} )
##
## Signals
snippet signal boost::signals2
	boost::signals2::signal<${1:void (void)}>
snippet connection boost::signals2
	boost::signals2::connection
snippet scoped_connection boost::signals2
	boost::signals2::scoped_connection
##
## Algorithms
snippet to_upper boost::algorithm
	boost::algorithm::to_upper( ${1:string} )
snippet to_upper_copy boost::algorithm
	boost::algorithm::to_upper_copy( ${1:string} )
snippet to_lower boost::algorithm
	boost::algorithm::to_lower( ${1:string} )
snippet to_lower_copy boost::algorithm
	boost::algorithm::to_lower_copy( ${1:string} )
snippet trim boost::algorithm
	boost::algorithm::trim( ${1:string} )
snippet trim_if boost::algorithm
	boost::algorithm::trim_if( ${1:string}, ${2:unary_predicate} )
snippet trim_copy boost::algorithm
	boost::algorithm::trim_copy( ${1:string} )
snippet trim_copy_if boost::algorithm
	boost::algorithm::trim_copy_if( ${1:string}, ${2:unary_predicate} )
snippet trim_left boost::algorithm
	boost::algorithm::trim_left( ${1:string} )
snippet trim_left_if boost::algorithm
	boost::algorithm::trim_left_if( ${1:string}, ${2:unary_predicate} )
snippet trim_left_copy boost::algorithm
	boost::algorithm::trim_left_copy( ${1:string} )
snippet trim_left_copy_if boost::algorithm
	boost::algorithm::trim_left_copy_if( ${1:string}, ${2:unary_predicate} )
snippet trim_right boost::algorithm
	boost::algorithm::trim_right( ${1:string} )
snippet trim_right_if boost::algorithm
	boost::algorithm::trim_right_if( ${1:string}, ${2:unary_predicate} )
snippet trim_right_copy boost::algorithm
	boost::algorithm::trim_right_copy( ${1:string} )
snippet trim_right_copy_if boost::algorithm
	boost::algorithm::trim_right_copy_if( ${1:string}, ${2:unary_predicate} )
snippet split boost::algorithm
	boost::algorithm::split( ${1:vector}, ${2:string}, ${3:unary_predicate} )
snippet join boost::algorithm
	boost::algorithm::join( ${1:vector}, ${2:separator} )
snippet replace_first_copy boost::algorithm
	boost::algorithm::replace_first_copy( ${1:string}, ${2:find}, ${3:replace} )
snippet replace_nth_copy boost::algorithm
	boost::algorithm::replace_nth_copy( ${1:string}, ${2:find}, ${3:n}, ${4:replace} )
snippet replace_last_copy boost::algorithm
	boost::algorithm::replace_last_copy( ${1:string}, ${2:find}, ${3:replace} )
snippet replace_all_copy boost::algorithm
	boost::algorithm::replace_all_copy( ${1:string}, ${2:find}, ${3:replace} )
snippet replace_head_copy boost::algorithm
	boost::algorithm::replace_head_copy( ${1:string}, ${2:find}, ${3:replace} )
snippet replace_tail_copy boost::algorithm
	boost::algorithm::replace_tail_copy( ${1:string}, ${2:find}, ${3:replace} )
snippet erase_first_copy boost::algorithm
	boost::algorithm::erase_first_copy( ${1:string}, ${2:find} )
snippet erase_nth_copy boost::algorithm
	boost::algorithm::erase_nth_copy( ${1:string}, ${2:find} )
snippet erase_last_copy boost::algorithm
	boost::algorithm::erase_last_copy( ${1:string}, ${2:find} )
snippet erase_all_copy boost::algorithm
	boost::algorithm::erase_all_copy( ${1:string}, ${2:find} )
snippet erase_head_copy boost::algorithm
	boost::algorithm::erase_head_copy( ${1:string}, ${2:find} )
snippet erase_tail_copy boost::algorithm
	boost::algorithm::erase_tail_copy( ${1:string}, ${2:find} )
snippet find_first boost::algorithm
	boost::algorithm::find_first( ${1:string}, ${2:find} )
snippet find_last boost::algorithm
	boost::algorithm::find_last( ${1:string}, ${2:find} )
snippet find_nth boost::algorithm
	boost::algorithm::find_nth( ${1:string}, ${2:find}, ${3:n} )
snippet find_head boost::algorithm
	boost::algorithm::find_head( ${1:string}, ${2:find} )
snippet find_tail boost::algorithm
	boost::algorithm::find_tail( ${1:string}, ${2:find} )
snippet starts_with boost::algorithm
	boost::algorithm::starts_with( ${1:string}, ${2:find} )
snippet ends_with boost::algorithm
	boost::algorithm::ends_with( ${1:string}, ${2:find} )
snippet contains boost::algorithm
	boost::algorithm::contains( ${1:string}, ${2:find} )
snippet is_space boost::algorithm
	boost::algorithm::is_space()
snippet is_alnum boost::algorithm
	boost::algorithm::is_alnum()
snippet is_alpha boost::algorithm
	boost::algorithm::is_alpha()
snippet is_cntrl boost::algorithm
	boost::algorithm::is_cntrl()
snippet is_digit boost::algorithm
	boost::algorithm::is_digit()
snippet is_graph boost::algorithm
	boost::algorithm::is_graph()
snippet is_lower boost::algorithm
	boost::algorithm::is_lower()
snippet is_print boost::algorithm
	boost::algorithm::is_print()
snippet is_punct boost::algorithm
	boost::algorithm::is_punct()
snippet is_upper boost::algorithm
	boost::algorithm::is_upper()
snippet is_any_of boost::algorithm
	boost::algorithm::is_any_of( ${1:string} )
snippet is_from_range boost::algorithm
	boost::algorithm::is_from_range( ${1:from}, ${2:to} )
snippet find_regex boost::algorithm
	boost::algorithm::find_regex( ${1:string}, ${2:regex} )
snippet replace_regex boost::algorithm
	boost::algorithm::replace_regex( ${1:string}, ${2:regex}, ${3:format} )
snippet erase_regex boost::algorithm
	boost::algorithm::erase_regex( ${1:string}, ${2:regex} )
snippet split_regex boost::algorithm
	boost::algorithm::split_regex( ${1:out_string_container}, ${2:in_string}, ${3:regex} )
##
## Assign
snippet push_back boost::assign
	boost::assign::push_back( ${1:collection} )( ${2:value} )( ${3:value} )
snippet list_of boost::assign
	boost::assign::list_of( ${1:value} )( ${2:value} )
snippet map_list_of boost::assign
	boost::assign::map_list_of( ${1:value}, ${2:value} )( ${3:value}, ${4:value} )
snippet push_front boost::assign
	boost::assign::push_front( ${1:collection} )( ${2:value} )( ${3:value} )
snippet ppush_back boost::assign
	boost::assign::ptr_push_back( ${1:collection} )( ${2:value} )( ${3:value} )
snippet ppush_front boost::assign
	boost::assign::ptr_push_front( ${1:collection} )( ${2:value} )( ${3:value} )
snippet pinsert boost::assign
	boost::assign::ptr_insert( ${1:collection} )( ${2:value} )( ${3:value} )
snippet pmap_insert boost::assign
	boost::assign::ptr_map_insert( ${1:collection} )( ${2:value} )( ${3:value} )
snippet plist_of boost::assign
	boost::assign::ptr_list_of( ${1:value} )( ${2:value} )
snippet insert boost::assign boost::assign
	boost::assign::insert( ${1:collection} )( ${2:value} )( ${3:value} )
snippet tuple_list_of boost::assign
	boost::assign::tuple_list_of( ${1:value} )( ${2:value} )
snippet ref_list_of boost::assign
	boost::assign::ref_list_of( ${1:value} )( ${2:value} )
snippet cref_list_of boost::assign
	boost::assign::cref_list_of( ${1:value} )( ${2:value} )
##
## Bimap
snippet bimap boost
	boost::bimap<${1:LT}, ${2:RT}>
snippet set_of boost::bimaps
	boost::bimaps::set_of<${1:T}>
snippet multiset_of boost::bimaps
	boost::bimaps::multiset_of<${1:T}>
snippet unconstrained_set_of boost::bimaps
	boost::bimaps::unconstrained_set_of<${1:T}>
snippet unordered_set_of boost::bimaps
	boost::bimaps::unordered_set_of<${1:T}>
snippet unordered_multiset_of boost::bimaps
	boost::bimaps::unordered_multiset_of<${1:T}>
snippet list_of boost::bimaps
	boost::bimaps::list_of<${1:T}>
snippet vector_of boost::bimaps
	boost::bimaps::vector_of<${1:T}>
snippet unconstrainted_set_of boost::bimaps
	boost::bimaps::unconstrainted_set_of<${1:T}>
##
## Multi-index
snippet multi_index_container boost::multi_index
	boost::multi_index::multi_index_container<${1:T}, ${2:indexed_by}>
snippet indexed_by boost::multi_index
	boost::multi_index::indexed_by<${1:T}, ${2:T}>
snippet hashed_non_unique boost::multi_index
	boost::multi_index::hashed_non_unique<${1:T}>
snippet hashed_unique boost::multi_index
	boost::multi_index::hashed_unique<${1:T}>
snippet member boost::multi_index
	boost::multi_index::member<${1:T}, ${2:T_member_type}, ${3:T_member_name}>
snippet ordered_unique boost::multi_index
	boost::multi_index::ordered_unique<${1:T}>
snippet identity boost::multi_index
	boost::multi_index::identity<${1:T}>
snippet ordered_non_unique boost::multi_index
	boost::multi_index::ordered_non_unique<${1:T}>
snippet random_access boost::multi_index
	boost::multi_index::random_access<>
snippet sequenced boost::multi_index
	boost::multi_index::sequenced<>
snippet nth_index boost::multi_index
	boost::multi_index::nth_index<${1:number}>::type::iterator
##
## Smart pointers
snippet scp boost
	boost::scoped_ptr<${1:T}>
snippet ip boost
	boost::intrusive_ptr<${1:T}>
snippet allocate_shared boost
	boost::allocate_shared<${1:T}>( ${2:allocator}, ${3:args...} )
snippet get_deleter boost
	boost::get_deleter( ${1:sp} )
snippet shared_array boost
	boost::shared_array<${1:T}>
snippet scoped_array boost
	boost::scoped_array<${1:T}>
snippet pdeque boost
	boost::ptr_deque<${1:T}>
snippet plist boost
	boost::ptr_list<${1:T}>
snippet pset boost
	boost::ptr_set<${1:T}>
snippet pmap boost
	boost::ptr_map<${1:key}, ${2:T}>
snippet pmultiset boost
	boost::ptr_multiset<${1:T}>
snippet pmultimap boost
	boost::ptr_multimap<${1:key}, ${2:T}>
snippet punordered_set boost
	boost::ptr_unordered_set<${1:T}>
snippet punordered_map boost
	boost::ptr_unordered_map<${1:T}>
snippet pvector boost
	boost::ptr_vector<${1:T}>
snippet empty_deleter boost::log
	boost::log::empty_deleter()
##
## Filesystem
snippet path boost::filesystem
	boost::filesystem::path
snippet filesystem_error boost::filesystem
	boost::filesystem::filesystem_error
snippet file_status boost::filesystem
	boost::filesystem::file_status
snippet status boost::filesystem
	boost::filesystem::status( ${1:path} )
snippet space_info boost::filesystem
	boost::filesystem::space_info
snippet space boost::filesystem
	boost::filesystem::space( ${1:path} )
snippet is_directory boost::filesystem
	boost::filesystem::is_directory( ${1:path} )
snippet is_regular_file boost::filesystem
	boost::filesystem::is_regular_file( ${1:path} )
snippet is_symlink boost::filesystem
	boost::filesystem::is_symlink( ${1:path} )
snippet exists boost::filesystem
	boost::filesystem::exists( ${1:path} )
snippet symlink_status boost::filesystem
	boost::filesystem::symlink_status( ${1:path} )
snippet file_size boost::filesystem
	boost::filesystem::file_size( ${1:path} )
snippet last_write_time boost::filesystem
	boost::filesystem::last_write_time( ${1:path} )
snippet rename boost::filesystem
	boost::filesystem::rename( ${1:current}, ${2:new} )
snippet remove boost::filesystem
	boost::filesystem::remove( ${1:path} )
snippet create_directory boost::filesystem
	boost::filesystem::create_directory( ${1:path} )
snippet complete boost::filesystem
	boost::filesystem::complete( ${1:path} )
snippet current_path boost::filesystem
	boost::filesystem::current_path()
##
## Boost Graph Library (BGL)
## 
## BGL Graph Classes
snippet adjacency_list boost
	boost::adjacency_list<${1:OutEdgeList = boost::vecS}, ${2:VertexList = boost::vecS}, ${3:Directed = boost::directedS}, ${4:VertexProperties = boost::no_property}, ${5:EdgeProperties = boost::no_property}, ${6:GraphProperties = boost::no_property}, ${7:EdgeList = boost::listS}>
snippet directed_graph boost
	boost::directed_graph<${1:VertexProp}, ${2:EdgeProp}, ${3:GraphProp}>
snippet undirected_graph boost
	boost::undirected_graph<${1:VertexProp}, ${2:EdgeProp}, ${3:GraphProp}>
snippet adjacency_matrix boost
	boost::adjacency_matrix<${1:Directed = boost::directedS}, ${2:VertexProperty = boost::no_property}, ${3:EdgeProperty = boost::no_property}, ${4:GraphProperty = boost::no_property}>
snippet compressed_sparse_row_graph boost
	boost::compressed_sparse_row_graph<${1:Directed = boost::directedS}, ${2:VertexProperty = void}, ${3:EdgeProperty = void}, ${4:GraphProperty = boost::no_property}, ${5:Vertex = std::size_t}, ${6:EdgeIndex = Vertex}>
## 
## BGL Iterators
snippet adjacency_iterator boost
	boost::graph_traits<${1:GraphType}>::adjacency_iterator 
snippet vertex_iterator boost
	boost::graph_traits<${1:GraphType}>::vertex_iterator 
## 
## BGL Iterator Adaptors
snippet adjacency_iterator_generator boost
	boost::adjacency_iterator_generator<${1:Graph}, ${2:VertexDescriptor}, ${3:OutEdgeIter}>::type
snippet inv_adjacency_iterator_generator boost
	boost::inv_adjacency_iterator_generator<${1:Graph}, ${2:VertexDescriptor}, ${3:InEdgeIter}>::type
##
## BGL Traits
snippet graph_traits boost
	boost::graph_traits<${1:GraphType}>
snippet property_map boost
	boost::property_map<${1:GraphType}, ${2:boost::vertex_index_t}>
snippet adjacency_list_traits boost
	boost::adjacency_list_traits<${1:AdjacencyListType}>
## 
## BGL Algorithms
snippet copy_graph boost
	boost::copy_graph( ${1:GraphConstRef}, ${2:GraphRef} )
snippet transpose_graph boost
	boost::transpose_graph( ${1:GraphConstRef}, ${2:GraphRef} )
## 
## BGL Algorithms TODO
snippet breadth_first_search boost
	boost::breadth_first_search()
snippet breadth_first_visit boost
	boost::breadth_first_visit()
snippet depth_first_search boost
	boost::depth_first_search()
snippet depth_first_visit boost
	boost::depth_first_visit()
snippet undirected_dfs boost
	boost::undirected_dfs()
snippet topological_sort boost
	boost::topological_sort()
snippet transitive_closure boost
	boost::transitive_closure()
snippet lengauer_tarjan_dominator_tree boost
	boost::lengauer_tarjan_dominator_tree()
snippet dijkstra_shortest_paths boost
	boost::dijkstra_shortest_paths()
snippet dijkstra_shortest_paths_no_color_map boost
	boost::dijkstra_shortest_paths_no_color_map()
snippet bellman_ford_shortest_paths boost
	boost::bellman_ford_shortest_paths()
snippet dag_shortest_paths boost
	boost::dag_shortest_paths()
snippet johnson_all_pairs_shortest_paths boost
	boost::johnson_all_pairs_shortest_paths()
snippet floyd_warshall_all_pairs_shortest_paths boost
	boost::floyd_warshall_all_pairs_shortest_paths()
snippet r_c_shortest_paths boost
	boost::r_c_shortest_paths()
snippet astar_search boost
	boost::astar_search()
snippet kruskal_minimum_spanning_tree boost
	boost::kruskal_minimum_spanning_tree()
snippet prim_minimum_spanning_tree boost
	boost::prim_minimum_spanning_tree()
snippet random_spanning_tree boost
	boost::random_spanning_tree()
snippet two_graphs_common_spanning_trees boost
	boost::two_graphs_common_spanning_trees()
snippet connected_components boost
	boost::connected_components()
snippet strong_components boost
	boost::strong_components()
snippet biconnected_components boost
	boost::biconnected_components()
snippet articulation_points boost
	boost::articulation_points()
snippet initialize_incremental_components boost
	boost::initialize_incremental_components()
snippet incremental_components boost
	boost::incremental_components()
snippet same_component boost
	boost::same_component()
snippet component_index boost
	boost::component_index()
snippet edmonds_karp_max_flow boost
	boost::edmonds_karp_max_flow()
snippet push_relabel_max_flow boost
	boost::push_relabel_max_flow()
snippet boykov_kolmogorov_max_flow boost
	boost::boykov_kolmogorov_max_flow()
snippet edmonds_maximum_cardinality_matching boost
	boost::edmonds_maximum_cardinality_matching()
snippet cycle_canceling boost
	boost::cycle_canceling()
snippet successive_shortest_path_nonnegative_weights boost
	boost::successive_shortest_path_nonnegative_weights()
snippet find_flow_cost boost
	boost::find_flow_cost()
snippet stoer_wagner_min_cut boost
	boost::stoer_wagner_min_cut()
snippet cuthill_mckee_ordering boost
	boost::cuthill_mckee_ordering()
snippet king_ordering boost
	boost::king_ordering()
snippet minimum_degree_ordering boost
	boost::minimum_degree_ordering()
snippet sloan_ordering boost
	boost::sloan_ordering()
snippet sloan_start_end_vertices boost
	boost::sloan_start_end_vertices()
snippet ith_wavefront boost
	boost::ith_wavefront()
snippet max_wavefront boost
	boost::max_wavefront()
snippet aver_wavefront boost
	boost::aver_wavefront()
snippet rms_wavefront boost
	boost::rms_wavefront()
snippet bandwidth boost
	boost::bandwidth()
snippet ith_bandwidth boost
	boost::ith_bandwidth()
snippet brandes_betweenness_centrality boost
	boost::brandes_betweenness_centrality()
snippet minimum_cycle_ratio and maximum_cycle_ratio boost
	boost::minimum_cycle_ratio and maximum_cycle_ratio()
snippet isomorphism boost
	boost::isomorphism()
snippet vf2_sub_graph_iso boost
	boost::vf2_sub_graph_iso()
snippet mcgregor_common_subgraphs boost
	boost::mcgregor_common_subgraphs()
snippet random_graph_layout boost
	boost::random_graph_layout()
snippet circle_layout boost
	boost::circle_layout()
snippet kamada_kawai_spring_layout boost
	boost::kamada_kawai_spring_layout()
snippet fruchterman_reingold_force_directed_layout boost
	boost::fruchterman_reingold_force_directed_layout()
snippet gursoy_atun_layout boost
	boost::gursoy_atun_layout()
snippet betweenness_centrality_clustering boost
	boost::betweenness_centrality_clustering()
snippet boyer_myrvold_planarity_test boost
	boost::boyer_myrvold_planarity_test()
snippet planar_face_traversal boost
	boost::planar_face_traversal()
snippet planar_canonical_ordering boost
	boost::planar_canonical_ordering()
snippet chrobak_payne_straight_line_drawing boost
	boost::chrobak_payne_straight_line_drawing()
snippet is_straight_line_drawing boost
	boost::is_straight_line_drawing()
snippet is_kuratowski_subgraph boost
	boost::is_kuratowski_subgraph()
snippet make_connected boost
	boost::make_connected()
snippet make_biconnected_planar boost
	boost::make_biconnected_planar()
snippet make_maximal_planar boost
	boost::make_maximal_planar()
snippet metric_tsp_approx boost
	boost::metric_tsp_approx()
snippet sequential_vertex_coloring boost
	boost::sequential_vertex_coloring()
snippet edge_coloring boost
	boost::edge_coloring()
snippet is_bipartite boost
	boost::is_bipartite()
snippet find_odd_cycle boost
	boost::find_odd_cycle()
snippet maximum_adjacency_search boost
	boost::maximum_adjacency_search()
snippet hawick_circuits boost
	boost::hawick_circuits()
##
## BGL Graph Adaptors
snippet subgraph boost
	boost::subgraph<${1:GraphType}>
snippet edge_list boost
	boost::edge_list<${1:EdgeIterator}, ${2:ValueType}, ${3:DiffType}>
snippet reverse_graph boost
	boost::reverse_graph<${1:BidirectionalGraph}, ${2:GraphReference = const BidirectionalGraph&}>
snippet make_reverse_graph boost
	boost::make_reverse_graph( ${1:graph} )
snippet filtered_graph  boost
	boost::filtered_graph<${1:Graph}, ${2:EdgePredicate}, ${3:VertexPredicate = boost::keep_all}>
##
## BGL Visitors Concepts TODO
snippet bfs_visitor boost
	boost::bfs_visitor
snippet dfs_visitor boost
	boost::dfs_visitor
snippet dijkstra_visitor boost
	boost::dijkstra_visitor
snippet bellman_visitor boost
	boost::bellman_visitor
snippet astar_visitor boost
	boost::astar_visitor
##
## BGL Visitors
snippet predecessor_recorder boost
	boost::predecessor_recorder<${1:PredecesorMap}, ${2:EventTag}>
snippet edge_predecessor_recorder boost
	boost::edge_predecessor_recorder<${1:PredEdgeMap}, ${2:EventTag}>
snippet distance_recorder boost
	boost::distance_recorder<${1:DistanceMap}, ${2:EventTag}>
snippet time_stamper boost
	boost::time_stamper<${1:TimeMap}, ${2:TimeT}, ${3:EventTag}>
snippet property_writer boost
	boost::property_writer<${1:PropertyMap}, ${2:OutputIterator}, ${3:EventTag}>
snippet property_put boost
	boost::property_put<${1:PropertyMap}, ${2:EventTag}>
snippet tsp_tour_visitor boost
	boost::tsp_tour_visitor<${1:OutputIterator}>
snippet tsp_tour_len_visitor boost
	boost::tsp_tour_len_visitor<${1:Graph}, ${2:WeightMap}, ${3:OutputIterator}, ${4:Length}>
##
## BGL Other Types
snippet vertex_descriptor boost
	boost::graph_traits<${1:GraphType}>::vertex_descriptor 
snippet edge_descriptor boost
	boost::graph_traits<${1:GraphType}>::edge_descriptor 
## 
## BGL Graph Properties
snippet property boost
	boost::property<${1:PropertyTag}, ${2:PropertyType}, ${3:NextProperty}>
snippet property_kind boost
	boost::property_kind<${1:PropertyTag}>::type
snippet property_num boost
	boost::property_num<${1:PropertyTag}>::value
snippet edge_property_tag boost
	boost::edge_property_tag
snippet vertex_property_tag boost
	boost::vertex_property_tag
snippet graph_property_tag boost
	boost::graph_property_tag
snippet custom_tag boost
	// type based
	struct ${1:T}_t {
		typedef boost::${2:edge/vertex/graph}_property_tag kind;
	};

	// enum based
	namespace boost {
		enum $2_$1_t { $2_$1 };
		BOOST_INSTALL_PROPERTY($2, $1);
	}
snippet vertex_index_t boost
	boost::vertex_index_t
snippet vertex_index1_t boost
	boost::vertex_index1_t
snippet vertex_index2_t boost
	boost::vertex_index2_t
snippet edge_index_t boost
	boost::edge_index_t
snippet graph_name_t boost
	boost::graph_name_t
snippet vertex_name_t boost
	boost::vertex_name_t
snippet edge_name_t boost
	boost::edge_name_t
snippet edge_weight_t boost
	boost::edge_weight_t
snippet edge_weight2_t boost
	boost::edge_weight2_t
snippet edge_capacity_t boost
	boost::edge_capacity_t
snippet edge_residual_capacity_t boost
	boost::edge_residual_capacity_t
snippet edge_reverse_t boost
	boost::edge_reverse_t
snippet vertex_distance_t boost
	boost::vertex_distance_t
snippet vertex_root_t boost
	boost::vertex_root_t
snippet vertex_all_t boost
	boost::vertex_all_t
snippet edge_all_t boost
	boost::edge_all_t
snippet graph_all_t boost
	boost::graph_all_t
snippet vertex_color_t boost
	boost::vertex_color_t
snippet vertex_rank_t boost
	boost::vertex_rank_t
snippet vertex_predecessor_t boost
	boost::vertex_predecessor_t
snippet vertex_isomorphism_t boost
	boost::vertex_isomorphism_t
snippet vertex_invariant_t boost
	boost::vertex_invariant_t
snippet vertex_invariant1_t boost
	boost::vertex_invariant1_t
snippet vertex_invariant2_t boost
	boost::vertex_invariant2_t
snippet vertex_degree_t boost
	boost::vertex_degree_t
snippet vertex_out_degree_t boost
	boost::vertex_out_degree_t
snippet vertex_in_degree_t boost
	boost::vertex_in_degree_t
snippet vertex_discover_time_t boost
	boost::vertex_discover_time_t
snippet vertex_finish_time_t boost
	boost::vertex_finish_time_t
##
## BGL Storage Types
snippet vecS boost
	boost::vecS
snippet listS boost
	boost::listS
snippet slistS boost
	boost::slistS
snippet setS boost
	boost::setS
snippet multisetS boost
	boost::multisetS
snippet hash_setS boost
	boost::hash_setS
##
## BGL Accessors
snippet source boost
	boost::source( ${1:edge_descriptor}, ${2:graph} )
snippet target boost
	boost::target( ${1:edge_descriptor}, ${2:graph} )
snippet out_edges boost
	boost::out_edges( ${1:vertex_descriptor}, ${2:graph} )
snippet in_edges boost
	boost::in_edges( ${1:vertex_descriptor}, ${2:graph} )
snippet out_degree boost
	boost::out_degree( ${1:vertex_descriptor}, ${2:graph} )
snippet in_degree boost
	boost::in_degree( ${1:vertex_descriptor}, ${2:graph} )
snippet degree boost
	boost::degree( ${1:vertex_descriptor}, ${2:graph} )
snippet adjacent_vertices boost
	boost::adjacent_vertices( ${1:vertex_descriptor}, ${2:graph} )
snippet vertices boost
	boost::vertices( ${1:graph} )
snippet num_vertices boost
	boost::num_vertices( ${1:graph} )
snippet add_edge boost (mutable graph)
	boost::add_edge( ${1:vertex_descriptor}, ${2:vertex_descriptor}, ${3:graph} )
snippet add_edge boost (mutable property graph)
	boost::add_edge( ${1:vertex_descriptor}, ${2:vertex_descriptor}, ${3:ep}, ${4:graph} )
snippet add_vertex boost (mutable graph)
	boost::add_vertex( ${1:graph} )
snippet add_vertex boost (mutable property graph)
	boost::add_vertex( ${1:vp}, ${2:graph} )
snippet clear_vertex boost
	boost::clear_vertex( ${1:vertex_descriptor}, ${2:graph} )
snippet edge boost
	boost::edge( ${1:vertex_descriptor}, ${2:vertex_descriptor}, ${3:graph} )
snippet edges boost
	boost::edges( ${1:graph} )
snippet get boost (get property map)
	boost::get( ${1:property}, ${2:graph} )
snippet get boost (get property value)
	boost::get( ${1:property}, ${2:graph}, ${1:vertex_descriptor} )
snippet num_edges boost
	boost::num_edges( ${1:graph} )
snippet put boost (set property value)
	boost::put( ${1:property}, ${2:graph}, ${1:vertex_descriptor}, ${4:vertex_descriptor} )
snippet remove_edge boost (edge descriptor)
	boost::remove_edge( ${1:edge_descriptor}, ${2:graph} )
snippet remove_edge boost (edge iterator)
	boost::remove_edge( ${1:edge_iterator}, ${2:graph} )
snippet remove_edge boost (vertex specified edge)
	boost::remove_edge( ${1:vertex_descriptor}, ${2:vertex_descriptor}, ${3:graph} )
snippet remove_vertex boost
	boost::remove_vertex( ${1:vertex_descriptor}, ${2:graph} )
