snippet cmake
	CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
	PROJECT(${1:ProjectName})

	FIND_PACKAGE(${2:LIBRARY})

	INCLUDE_DIRECTORIES(
		${$2_INCLUDE_DIR}
	)

	ADD_SUBDIRECTORY(${0:src})

	ADD_EXECUTABLE($1)

	TARGET_LINK_LIBRARIES($1
		${$2_LIBRARIES}
	)
snippet include
	INCLUDE_DIRECTORIES(
		${${0:INCLUDE_DIR}}
	)
snippet find
	FIND_PACKAGE(${0:LIBRARY})
snippet glob
	FILE(GLOB ${1:SRCS} *.${0:cpp})
snippet subdir
	ADD_SUBDIRECTORY(${0:src})
snippet lib
	ADD_LIBRARY(${1:lib} ${2:STATIC}
		${${0:SRCS}}
	)
snippet link
	TARGET_LINK_LIBRARIES(${1:bin}
		${0:somelib}
	)
snippet bin
	ADD_EXECUTABLE(${1:bin})
snippet set
	SET(${1:var} ${0:val})
snippet dep
	ADD_DEPENDENCIES(${1:target}
		${0:dep}
	)
snippet props
	SET_TARGET_PROPERTIES(${1:target}
		${2:PROPERTIES} ${3:COMPILE_FLAGS}
		${0:"-O3 -Wall -pedantic"}
	)
snippet if
	IF ( ${1} )
		${2}
	ENDIF ( $1 )
snippet elseif
	ELSEIF ( ${1} )
		${2}
snippet else
	ELSE ()
		${1}
snippet while
	WHILE ( ${1} )
		${2}
	ENDWHILE ( $1 )
snippet foreach
	FOREACH ( ${1:loop_var} ${2:args} )
		${3}
	ENDFOREACH ( $1 )
snippet function
	FUNCTION( ${1:name} ${2:args} )
		${3}
	ENDFUNCTION( $1 )
snippet break
	BREAK()
snippet macro
	MACRO( ${1:name} ${2:args} )
		${3}
	ENDMACRO( $1 )
